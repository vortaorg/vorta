# Copyright (C) 2023 Gramine contributors
# SPDX-License-Identifier: BSD-3-Clause

# Using Jinja2 template syntax for Gramine paths
libos.entrypoint = "{{ gramine.libos }}"

# Adjust library paths with template variables
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr{{ arch_libdir }}"
loader.env.PATH = "/bin:/usr/bin"
loader.insecure__use_cmdline_argv = true

# Mount points using template variables
fs.mounts = [
   { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
   { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
   { path = "/usr/lib", uri = "file:/usr/lib" },
   { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
   { path = "/bin", uri = "file:/bin" },
   { path = "/usr/bin", uri = "file:/usr/bin" },
   { path = "/tmp", uri = "file:/tmp" },
   { path = "/scripts", uri = "file:/app/scripts" },
   { path = "/home/user/.cargo", uri = "file:/home/user/.cargo" }
]

# SGX configurations
sgx.debug = true
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}
sgx.enclave_size = "8G"
sgx.max_threads = 16

# Trusted files using template variables
sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr{{ arch_libdir }}/",
  "file:/bin/",
  "file:/usr/bin/",
  "file:/app/scripts/fibonacci",
  "file:/app/scripts/riscv32im-succinct-zkvm-elf",
  "file:/app/scripts/bash_test.sh"
]

# Allowed files
sgx.allowed_files = [
   "file:/app/scripts/",
   "file:/dev/stdout",
   "file:/dev/stderr",
   "file:/dev/null",
   "file:/dev/urandom",
   "file:/app/scripts/testdir/",
   "file:/tmp/",
   "file:/home/user/.cargo/",
   "file:/app",
   "file:/app/"
]